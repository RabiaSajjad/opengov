<?php

/**
 * @file
 * Contains voting_webform.module.
 */

use \Drupal\Core\Form\FormStateInterface;
use \Drupal\webform\WebformSubmissionInterface;

/**
 * Implements template_preprocess_webform().
 */
function voting_webform_preprocess_webform(array &$variables) {
  $webform_id = $variables['element']['#webform_id'];
  if ($webform_id === 'vote') {
    $uuid = \Drupal::request()->query->get('uuid');
    $vote_result = getAverageVoteAndCount($uuid, $webform_id);
    if ($vote_result) {
      $variables['vote_average'] = $vote_result['average'];
      $variables['vote_count'] = $vote_result['count'];
    }
  }
  elseif ($webform_id === 'app_vote') {
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node instanceof \Drupal\node\NodeInterface
      && $node->hasField('field_vote_count')
      && $node->hasField('field_vote_average')) {
      $variables['vote_count'] = $node->get('field_vote_count')->value;
      $variables['vote_average'] = $node->get('field_vote_average')->value;
    }
  }
  elseif ($webform_id === 'vote_up_down') {
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node instanceof \Drupal\node\NodeInterface && $node->hasField('field_vote_up_down')) {
      $variables['vote_up_down_value'] = $node->get('field_vote_up_down')->value;
    }
  }
  elseif ($webform_id === 'vote_up_down_external') {
    // get uuid from url
    $url = \Drupal::request()->getRequestUri();
    if ($url) {
      $url_clean = explode("?",$url);
      $url_explode = explode("/",$url_clean[0]);
      $uuid = end($url_explode);
      // get vote count for uuid
      $connection = \Drupal::database();
      $query = $connection->select('external_voting', 'v');
      $query->condition('v.uuid', $uuid, '=');
      $query->fields('v', ['vote_count']);
      $result = $query->execute();
      $vote_count=0;
      foreach ($result as $record) {
        $vote_count = $record->vote_count;
      }

      $variables['vote_up_down_value'] = $vote_count;
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_prepare_form().
 */
function voting_webform_webform_submission_prepare_form(WebformSubmissionInterface $webform_submission, $operation, FormStateInterface $form_state)
{
  // Get the submission's Webform.
  $webform = $webform_submission->getWebform();

  if ($webform->id() === 'vote') {
    $url = \Drupal::request()->headers->get('referer');
    if ($url) {
      // set referred_url to send back to the referring page
      $webform_submission->setElementData('referred_url', $url);
    }
    else {
      \Drupal::logger('vote')->warning($webform->id() . ': No referring URL found');
    }
  }
  elseif ($webform->id() === 'vote_up_down_external') {
    $url = \Drupal::request()->getRequestUri();
    if ($url) {
      // set referred_url to send back to the referring page
      $webform_submission->setElementData('referred_url', $url);
      $url_explode = explode("/",$url);
      $uuid = end($url_explode);
      $webform_submission->setElementData('uuid', $uuid);
    }
    else {
      \Drupal::logger('vote')->warning($webform->id() . ': No referring URL found');
    }
  }
}

function getAverageVoteAndCount($uuid, $webform_id)
{
  if (empty($uuid)) {
    return NULL;
  }

  try {
    // get current vote count and average
    $connection = \Drupal::database();
    $query = $connection->select('external_rating', 'v');
    $query->condition('v.uuid', $uuid, '=');
    $query->fields('v', ['vote_count', 'vote_average']);
    $result = $query->execute();
    $vote_count = 0;
    $vote_average = 0;

    foreach ($result as $record) {
      $vote_count = $record->vote_count;
      $vote_average = round($record->vote_average);
    }

    $vote_result["average"] = $vote_average;
    $vote_result["count"] = $vote_count;
    return $vote_result;
  }

  catch (Exception $e) {
    \Drupal::logger('vote')->warning($webform_id . ': Exception thrown while trying to get vote average for dataset with uuid: ' . $uuid);
    return NULL;
  }
}

