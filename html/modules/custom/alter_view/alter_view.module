<?php

use Drupal\Core\Render\Markup;
use \Drupal\views\ViewExecutable;

/**
 * @file
 * Contains alter_view.module.
 */

/**
 * Implements template_preprocess_views_view_fields
 * highlight search results
 */
function alter_view_preprocess_views_view_fields(&$variables) {
  $view = $variables['view'];
  if ($view->id() === 'blog' && $view->current_display === 'all' && $view->exposed_data['combine'] != '') {
    $keys = $keys = explode(' ' , preg_replace('/[^a-zA-Z0-9\s]/', '', $view->exposed_data['combine']));
    if (is_array($keys) && !empty($variables['fields']['body']->content)) {
      $body = $variables['fields']['body']->content->__toString();
      foreach ($keys as $key) {
        $body = highlight($key, $body);
      }
      $replace_body = Markup::create($body);
      $variables['fields']['body']->content = $replace_body;
    }
  }
  elseif (isset($variables['view']->exposed_data['search_api_fulltext'])) {
    $keys = explode(' ' , preg_replace('/[^a-zA-Z0-9\s]/', '', $view->exposed_data['search_api_fulltext']));
    if (is_array($keys) && !empty($variables['fields']['nothing']->content)) {
      $body = $variables['fields']['nothing']->content->__toString();
      foreach ($keys as $key) {
        $body = highlight($key, $body);
      }
      $replace_body = Markup::create($body);
      $variables['fields']['nothing']->content = $replace_body;
    }
  }
}

/**
 * Implements hook_views_pre_render
 * modify solr searches
 * show language specific fields and sorts
 * example description_en when English is the current language and description_fr when French is the current language
 */
function alter_view_views_pre_render(ViewExecutable $view) {
  $language_manager = \Drupal::service('language_manager');
  $currentLang = $language_manager->getCurrentLanguage()->getId();
  $field_to_disable = $currentLang == 'en' ? 'fr' : 'en';

  $views = [
    'pd_core_ati', 'pd_core_ati_details',
    'pd_core_contracts', 'pd_core_contracts_details',
    'pd_core_grants', 'pd_core_grants_details',
    'pd_core_reclassification', 'pd_core_reclassification_details',
  ];

  if (in_array($view->id(), $views)) {
    // disable fields in other language
    foreach ($view->field as $field) {
      if (strpos($field->field, '_' . $field_to_disable) !== FALSE) {
        unset($view->field[$field->field]);
      }
    }

    // disable sorts in other language only for the list views
    if (strpos($view->id(), '_details') === FALSE
      && is_array($view->exposed_widgets)
      && array_key_exists('sort_by', $view->exposed_widgets)
      && array_key_exists('#options', $view->exposed_widgets['sort_by'])) {

      foreach ($view->exposed_widgets['sort_by']['#options'] as $key => $value) {
        if (strpos($key, '_' . $field_to_disable) !== FALSE) {
          unset($view->exposed_widgets['sort_by']['#options'][$key]);
        }
      }

    }
  }
}

/**
 * Highlight function
 * highlights first instance of key in string
 * returns highlighted string
 */

function highlight($key, $string) {
  if ($key && $string) {
    $pos = stripos($string, $key);
    $len = strlen($key);

    if ($pos !== FALSE) {
      $beginning = substr($string, 0, $pos);
      $match = substr($string, $pos, $len);
      $end = substr($string, $pos + $len);
      $string = $beginning . '<mark>' . $match . '</mark>' . $end;
    }
  }
  return $string;
}
