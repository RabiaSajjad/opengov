<?php

use Drupal\Core\Cache\Cache;
use Drupal\Core\Render\Markup;
use Drupal\views\Views;
use \Drupal\views\ViewExecutable;

/**
 * @file
 * Contains alter_view.module.
 */

/**
 * Implements hook_views_pre_render
 * modify solr searches
 * show language specific fields and sorts
 * example description_en when English is the current language and description_fr when French is the current language
 */
function alter_view_views_pre_render(ViewExecutable $view) {
  $language_manager = \Drupal::service('language_manager');
  $currentLang = $language_manager->getCurrentLanguage()->getId();
  $field_to_disable = $currentLang == 'en' ? 'fr' : 'en';

  $views = [
    'pd_core_ati', 'pd_core_ati_details',
    'pd_core_contracts', 'pd_core_contracts_details',
    'pd_core_grants', 'pd_core_grants_details',
    'pd_core_hospitalityq', 'pd_core_hospitalityq_details',
    'pd_core_inventory', 'pd_core_inventory_details',
    'pd_core_reclassification', 'pd_core_reclassification_details',
    'pd_core_travela', 'pd_core_travela_details',
    'pd_core_travelq', 'pd_core_travelq_details',
    'pd_core_wrongdoing', 'pd_core_wrongdoing_details',
  ];

  if (in_array($view->id(), $views)) {

    // disable fields in other language
    foreach ($view->field as $field) {
      if (strpos($field->field, '_' . $field_to_disable) !== FALSE) {
        unset($view->field[$field->field]);
      }
    }

    // disable sorts in other language only for the list views
    if (strpos($view->id(), '_details') === FALSE
      && is_array($view->exposed_widgets)
      && array_key_exists('sort_by', $view->exposed_widgets)
      && array_key_exists('#options', $view->exposed_widgets['sort_by'])) {

      foreach ($view->exposed_widgets['sort_by']['#options'] as $key => $value) {
        if (strpos($key, '_' . $field_to_disable) !== FALSE) {
          unset($view->exposed_widgets['sort_by']['#options'][$key]);
        }
      }
    }
  }
}

/**
 * Implements hook_views_pre_view
 * attach external comment form to the footer of view pd_core_inventory_details
 */
function alter_view_views_pre_view(ViewExecutable $view, $display_id, array &$args) {
  if ($view->id() === 'pd_core_inventory_details') {
    $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
    $options = array(
      'id' => 'area',
      'table' => 'views',
      'field' => 'area',
      'relationship' => 'none',
      'group_type' => 'group',
      'admin_label' => '',
      'empty' => false,
      'tokenize' => false,
      'content' => [
        'value' => '<div data-ajax-replace="/' . $language . '/external-comment/inventory/' . $view->args[0] . '" ></div>',
        'format' => 'full_html',
      ],
      'plugin_id' => 'text',
    );
    $view->setHandler($display_id, 'footer', 'area', $options);
  }
}

/**
 * Implements template_preprocess_views_bootstrap_table
 * add vote column to pd_core_inventory
 */
function alter_view_preprocess_views_bootstrap_table(array &$variables) {
  $view = $variables['view'];
  if (is_object($view) && $view->id() === 'pd_core_inventory') {
    for ($x=0; $x< sizeof($variables['rows']); $x++) {
      $uuid = $view->result[$x]->_item->getField('id')->getValues();
      $connection = \Drupal::database();
      $query = $connection->select('external_voting', 'v');
      $query->condition('v.uuid', $uuid, '=');
      $query->fields('v', ['vote_count']);
      $result = $query->execute();
      $vote_count=0;
      foreach ($result as $record) {
        $vote_count = $record->vote_count;
      }

      $variables['rows'][$x]['columns']['nothing']['content'][0]['field_output']['#markup']= Markup::create($vote_count);
    }
  }
}

/**
 * Implements hook_cron().
 * clear cache of views generated using Solr
 */
function alter_view_cron() {
  $pd_views = [
    'pd_core_ati',
    'pd_core_contracts',
    'pd_core_grants',
    'pd_core_inventory',
    'pd_core_hospitalityq',
    'pd_core_reclassification',
    'pd_core_travela',
    'pd_core_travelq',
    'pd_core_wrongdoing',
  ];

  foreach ($pd_views as $view_name) {
    $view = Views::getView($view_name);
    $tags = $view->getCacheTags();
    Cache::invalidateTags($tags);
    \Drupal::logger('od_solr_external')->notice('Cache cleared for ' . $view->getTitle());
  }
}
